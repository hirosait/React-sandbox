{"id":"src/index.js","dependencies":[{"name":"/project/React-sandbox/package.json","includedInParent":true,"mtime":1683842468038}],"generated":{"js":"/**\n * const & letの変数宣言\n */\n\n// // varは割となんでもできちゃう\n// var val1 = \"var変数\";\n\n// console.log(val1);\n\n// // var変数は上書き可能\n// val1 = \"var変数を上書き\";\n// console.log(val1);\n\n// // var変数は再宣言可能\n// var val1 = \"var変数を再宣言\";\n// console.log(val1);\n\n// // let\n// let val2 = \"let変数\";\n// console.log(val2);\n\n// val2 = \"let変数を上書き\";\n\n// console.log(val2);\n\n// // letは再宣言不可能\n// let val2 = \"let変数を再宣言\";\n\n// const val3 = \"const変数\";\n// console.log(val3);\n\n// //const変数への上書き不可\n// val3 = \"const変数を上書き\";\n\n// const val3 = \"const変数を再宣言\";\n\n// constでもオブジェクトの中身は変えられる\n// constで定義したオブジェクトはプロパティの変更が可能\n// →基本的にapp開発で変数宣言はconstで行い、処理の中で上書きする変数はletを使う\n// const val4 = {\n//   name: \"じゃんけん\",\n//   age: 28\n// }\n// console.log(val4);\n\n// val4.name = \"ぽん\";\n// console.log(val4);\n\n// val4.address = \"hi\";\n// console.log(val4);\n// // constで定義した配列はプロパティの変更が可能\n\n// const val5 = ['dog', 'cat'];\n// console.log(val5);\n// val5[0] = \"bird\";\n// console.log(val5);\n// val5.push(\"monkey\");\n// console.log(val5);\n\n/**\n * テンプレート文字列\n */\n\n// const name = \"じゃんけん\";\n// const age = 28;\n// // 「私の名前はじゃんけんです。年齢は２８歳です。」\n// //これまで\n// const message1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"です。\";\n// console.log(message1);\n// //テンプレート文字列を用いた方法\n// const message2 = `私の名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\n/**\n * アロー関数\n */\n\n//従来の関数\n//  function func1(str){\n//   return str;\n//  }\n//変数に入れることもできる\n//  const func1 = function(str){\n//    return str;\n//  }\n//  console.log(func1('test'));\n\n//アロー関数\n//  const func2 = (str) => {\n//   return str;\n//  }\n//  console.log(func2(\"test2\"));\n\n//引数の()は省略できる。がprettierが勝手に保管してくれる\n\n// 波括弧とリターンを省略できる\n// const func2 = (str) => str;\n// console.log(func2(\"test2\"));\n\n// const func3 = (num1, num2) => {\n//  return num1 + num2;\n// };\n// // const func3 = (num1, num2) => num1 + num2;\n// console.log(func3(10, 20));\n\n/**\n * 分割代入\n */\n\n//  const myProfile = {\n//    name: \"じゃんけん\",\n//    age: 28\n//  };\n\n// //  const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}です`;\n// //  console.log(message1);\n\n//  const {name, age} = myProfile; //取り出し\n//  const message1 = `名前は${name}です。年齢は${age}です`;\n//  console.log(message1);\n\n// const myProfile = ['じゃんけん',28];\n\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}です。`;\n// console.log(message3);\n\n// const [name, age] = myProfile;\n// const message4 = `名前は${name}です。年齢は${age}です`;\n// console.log(message4);\n\n/**\n * デフォルト値、引数など\n */\n\n//  const sayHello = (name) => console.log(`こんにちは!${name}さん`);\n//  sayHello();\n//-> こんにちは!undefinedさん\n\n//  const sayHello = (name = \"ゲスト\") => console.log(`こんにちは!${name}さん`);\n//  sayHello();\n//->こんにちはゲストさん\n\n/**\n * スプレッド構文 ...\n * 配列に対して...ついていたら、順番に展開して処理してくれる\n */\n// const arr1 = [1,2];\n// console.log(arr1);\n// console.log(...arr1);\n\n// const sumFunc = (num1, num2) => console.log(num1 + num2);\n// // sumFunc(arr1[0], arr1[1]);\n// sumFunc(...arr1);\n\n// // まとめる\n// const arr2 = [1,2,3,4,5];\n// const [num1, num2, ...arr3] = arr2;\n// console.log(num1);\n// console.log(num2);\n// console.log(arr3);\n\n// //　配列nコピー、結合\n// const arr4 = [10,20];\n// const arr5 = [30, 40];\n// const arr6 = [...arr4];\n// console.log(arr6);\n\n// const arr7 = [...arr4, ...arr5];\n// console.log(arr7);\n\n// // =だと参照渡し\n// const arr8 = arr4;\n// console.log(arr8);\n// arr8[0] = 100;\n// console.log(arr4);\n\n/**\n * mapやfilterを使った配列の処理\n * これを使うことで、for文が不要になる\n */\n\nvar nameArr = [\"田中\", \"山田\", \"じゃんけん\"];\n//  for (let index = 0; index < nameArr.length; index++){\n//    console.log(`${index+1}番目は${nameArr[index]}です`);\n//  }\n\n// mapの中にアロー関数を定義、配列の値を１つずつ取り出しnameに入ってくる\n//  const nameArr2 = nameArr.map((name) => {\n//    return name;\n//  })\n// console.log(nameArr2);\n\n// 配列から値を１つずつ取り出して、アロー関数に渡す.\n// nameArr.map((name) => console.log(name));\n// nameArr.map((name, index) => console.log(`${index+1}番目は${name}です`));\n\n// filter 配列に対してある条件が一致した値のみ取り出す\n\n// const numArr = [1, 2, 3, 4, 5];\n// const newnumArr = numArr.filter((num) => {\n//   return num % 2 === 1;\n// });\n// console.log(newnumArr);\n\n// const newNameArr = nameArr.map((name) => {\n//   if(name === \"じゃんけん\"){\n//     return name\n//   } else {\n//     return `${name}さん`\n//   }\n// })\n// console.log(newNameArr);\n\n/**\n * 三項演算子\n */\n\n// ある条件? 条件がtrueのとき: 条件がfalseのとき\n\n// const val1 = 1 > 0 ? 'trueです' : 'falseです';\n// console.log(val1);\n\nvar num = 1300;\nconsole.log(num.toLocaleString());"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"src/index.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"src/index.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"src/index.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"src/index.js","original":{"line":12,"column":0}},{"generated":{"line":14,"column":0},"source":"src/index.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"src/index.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":0},"source":"src/index.js","original":{"line":16,"column":0}},{"generated":{"line":18,"column":0},"source":"src/index.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"src/index.js","original":{"line":20,"column":0}},{"generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":22,"column":0}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":26,"column":0},"source":"src/index.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"src/index.js","original":{"line":27,"column":0}},{"generated":{"line":29,"column":0},"source":"src/index.js","original":{"line":29,"column":0}},{"generated":{"line":30,"column":0},"source":"src/index.js","original":{"line":30,"column":0}},{"generated":{"line":32,"column":0},"source":"src/index.js","original":{"line":32,"column":0}},{"generated":{"line":33,"column":0},"source":"src/index.js","original":{"line":33,"column":0}},{"generated":{"line":35,"column":0},"source":"src/index.js","original":{"line":35,"column":0}},{"generated":{"line":37,"column":0},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"src/index.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"src/index.js","original":{"line":39,"column":0}},{"generated":{"line":40,"column":0},"source":"src/index.js","original":{"line":40,"column":0}},{"generated":{"line":41,"column":0},"source":"src/index.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"src/index.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"src/index.js","original":{"line":43,"column":0}},{"generated":{"line":44,"column":0},"source":"src/index.js","original":{"line":44,"column":0}},{"generated":{"line":46,"column":0},"source":"src/index.js","original":{"line":46,"column":0}},{"generated":{"line":47,"column":0},"source":"src/index.js","original":{"line":47,"column":0}},{"generated":{"line":49,"column":0},"source":"src/index.js","original":{"line":49,"column":0}},{"generated":{"line":50,"column":0},"source":"src/index.js","original":{"line":50,"column":0}},{"generated":{"line":51,"column":0},"source":"src/index.js","original":{"line":51,"column":0}},{"generated":{"line":53,"column":0},"source":"src/index.js","original":{"line":53,"column":0}},{"generated":{"line":54,"column":0},"source":"src/index.js","original":{"line":54,"column":0}},{"generated":{"line":55,"column":0},"source":"src/index.js","original":{"line":55,"column":0}},{"generated":{"line":56,"column":0},"source":"src/index.js","original":{"line":56,"column":0}},{"generated":{"line":57,"column":0},"source":"src/index.js","original":{"line":57,"column":0}},{"generated":{"line":58,"column":0},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":60,"column":0},"source":"src/index.js","original":{"line":60,"column":0}},{"generated":{"line":61,"column":0},"source":"src/index.js","original":{"line":61,"column":0}},{"generated":{"line":62,"column":0},"source":"src/index.js","original":{"line":62,"column":0}},{"generated":{"line":64,"column":0},"source":"src/index.js","original":{"line":64,"column":0}},{"generated":{"line":65,"column":0},"source":"src/index.js","original":{"line":65,"column":0}},{"generated":{"line":66,"column":0},"source":"src/index.js","original":{"line":66,"column":0}},{"generated":{"line":67,"column":0},"source":"src/index.js","original":{"line":67,"column":0}},{"generated":{"line":68,"column":0},"source":"src/index.js","original":{"line":68,"column":0}},{"generated":{"line":69,"column":0},"source":"src/index.js","original":{"line":69,"column":0}},{"generated":{"line":70,"column":0},"source":"src/index.js","original":{"line":70,"column":0}},{"generated":{"line":71,"column":0},"source":"src/index.js","original":{"line":71,"column":0}},{"generated":{"line":72,"column":0},"source":"src/index.js","original":{"line":72,"column":0}},{"generated":{"line":74,"column":0},"source":"src/index.js","original":{"line":74,"column":0}},{"generated":{"line":75,"column":0},"source":"src/index.js","original":{"line":75,"column":0}},{"generated":{"line":76,"column":0},"source":"src/index.js","original":{"line":76,"column":0}},{"generated":{"line":78,"column":0},"source":"src/index.js","original":{"line":78,"column":0}},{"generated":{"line":79,"column":0},"source":"src/index.js","original":{"line":79,"column":0}},{"generated":{"line":80,"column":0},"source":"src/index.js","original":{"line":80,"column":0}},{"generated":{"line":81,"column":0},"source":"src/index.js","original":{"line":81,"column":0}},{"generated":{"line":82,"column":0},"source":"src/index.js","original":{"line":82,"column":0}},{"generated":{"line":83,"column":0},"source":"src/index.js","original":{"line":83,"column":0}},{"generated":{"line":84,"column":0},"source":"src/index.js","original":{"line":84,"column":0}},{"generated":{"line":85,"column":0},"source":"src/index.js","original":{"line":85,"column":0}},{"generated":{"line":86,"column":0},"source":"src/index.js","original":{"line":86,"column":0}},{"generated":{"line":88,"column":0},"source":"src/index.js","original":{"line":88,"column":0}},{"generated":{"line":89,"column":0},"source":"src/index.js","original":{"line":89,"column":0}},{"generated":{"line":90,"column":0},"source":"src/index.js","original":{"line":90,"column":0}},{"generated":{"line":91,"column":0},"source":"src/index.js","original":{"line":91,"column":0}},{"generated":{"line":92,"column":0},"source":"src/index.js","original":{"line":92,"column":0}},{"generated":{"line":94,"column":0},"source":"src/index.js","original":{"line":94,"column":0}},{"generated":{"line":96,"column":0},"source":"src/index.js","original":{"line":96,"column":0}},{"generated":{"line":97,"column":0},"source":"src/index.js","original":{"line":97,"column":0}},{"generated":{"line":98,"column":0},"source":"src/index.js","original":{"line":98,"column":0}},{"generated":{"line":100,"column":0},"source":"src/index.js","original":{"line":100,"column":0}},{"generated":{"line":101,"column":0},"source":"src/index.js","original":{"line":101,"column":0}},{"generated":{"line":102,"column":0},"source":"src/index.js","original":{"line":102,"column":0}},{"generated":{"line":103,"column":0},"source":"src/index.js","original":{"line":103,"column":0}},{"generated":{"line":104,"column":0},"source":"src/index.js","original":{"line":104,"column":0}},{"generated":{"line":106,"column":0},"source":"src/index.js","original":{"line":106,"column":0}},{"generated":{"line":107,"column":0},"source":"src/index.js","original":{"line":107,"column":0}},{"generated":{"line":108,"column":0},"source":"src/index.js","original":{"line":108,"column":0}},{"generated":{"line":110,"column":0},"source":"src/index.js","original":{"line":110,"column":0}},{"generated":{"line":111,"column":0},"source":"src/index.js","original":{"line":111,"column":0}},{"generated":{"line":112,"column":0},"source":"src/index.js","original":{"line":112,"column":0}},{"generated":{"line":113,"column":0},"source":"src/index.js","original":{"line":113,"column":0}},{"generated":{"line":115,"column":0},"source":"src/index.js","original":{"line":115,"column":0}},{"generated":{"line":116,"column":0},"source":"src/index.js","original":{"line":116,"column":0}},{"generated":{"line":118,"column":0},"source":"src/index.js","original":{"line":118,"column":0}},{"generated":{"line":119,"column":0},"source":"src/index.js","original":{"line":119,"column":0}},{"generated":{"line":120,"column":0},"source":"src/index.js","original":{"line":120,"column":0}},{"generated":{"line":122,"column":0},"source":"src/index.js","original":{"line":122,"column":0}},{"generated":{"line":124,"column":0},"source":"src/index.js","original":{"line":124,"column":0}},{"generated":{"line":125,"column":0},"source":"src/index.js","original":{"line":125,"column":0}},{"generated":{"line":127,"column":0},"source":"src/index.js","original":{"line":127,"column":0}},{"generated":{"line":128,"column":0},"source":"src/index.js","original":{"line":128,"column":0}},{"generated":{"line":129,"column":0},"source":"src/index.js","original":{"line":129,"column":0}},{"generated":{"line":131,"column":0},"source":"src/index.js","original":{"line":131,"column":0}},{"generated":{"line":132,"column":0},"source":"src/index.js","original":{"line":132,"column":0}},{"generated":{"line":133,"column":0},"source":"src/index.js","original":{"line":133,"column":0}},{"generated":{"line":135,"column":0},"source":"src/index.js","original":{"line":135,"column":0}},{"generated":{"line":136,"column":0},"source":"src/index.js","original":{"line":136,"column":0}},{"generated":{"line":137,"column":0},"source":"src/index.js","original":{"line":137,"column":0}},{"generated":{"line":139,"column":0},"source":"src/index.js","original":{"line":139,"column":0}},{"generated":{"line":140,"column":0},"source":"src/index.js","original":{"line":140,"column":0}},{"generated":{"line":141,"column":0},"source":"src/index.js","original":{"line":141,"column":0}},{"generated":{"line":143,"column":0},"source":"src/index.js","original":{"line":143,"column":0}},{"generated":{"line":144,"column":0},"source":"src/index.js","original":{"line":144,"column":0}},{"generated":{"line":145,"column":0},"source":"src/index.js","original":{"line":145,"column":0}},{"generated":{"line":146,"column":0},"source":"src/index.js","original":{"line":146,"column":0}},{"generated":{"line":147,"column":0},"source":"src/index.js","original":{"line":147,"column":0}},{"generated":{"line":148,"column":0},"source":"src/index.js","original":{"line":148,"column":0}},{"generated":{"line":149,"column":0},"source":"src/index.js","original":{"line":149,"column":0}},{"generated":{"line":151,"column":0},"source":"src/index.js","original":{"line":151,"column":0}},{"generated":{"line":152,"column":0},"source":"src/index.js","original":{"line":152,"column":0}},{"generated":{"line":153,"column":0},"source":"src/index.js","original":{"line":153,"column":0}},{"generated":{"line":155,"column":0},"source":"src/index.js","original":{"line":155,"column":0}},{"generated":{"line":156,"column":0},"source":"src/index.js","original":{"line":156,"column":0}},{"generated":{"line":157,"column":0},"source":"src/index.js","original":{"line":157,"column":0}},{"generated":{"line":158,"column":0},"source":"src/index.js","original":{"line":158,"column":0}},{"generated":{"line":159,"column":0},"source":"src/index.js","original":{"line":159,"column":0}},{"generated":{"line":160,"column":0},"source":"src/index.js","original":{"line":160,"column":0}},{"generated":{"line":162,"column":0},"source":"src/index.js","original":{"line":162,"column":0}},{"generated":{"line":163,"column":0},"source":"src/index.js","original":{"line":163,"column":0}},{"generated":{"line":164,"column":0},"source":"src/index.js","original":{"line":164,"column":0}},{"generated":{"line":165,"column":0},"source":"src/index.js","original":{"line":165,"column":0}},{"generated":{"line":166,"column":0},"source":"src/index.js","original":{"line":166,"column":0}},{"generated":{"line":168,"column":0},"source":"src/index.js","original":{"line":168,"column":0}},{"generated":{"line":169,"column":0},"source":"src/index.js","original":{"line":169,"column":0}},{"generated":{"line":171,"column":0},"source":"src/index.js","original":{"line":171,"column":0}},{"generated":{"line":172,"column":0},"source":"src/index.js","original":{"line":172,"column":0}},{"generated":{"line":173,"column":0},"source":"src/index.js","original":{"line":173,"column":0}},{"generated":{"line":174,"column":0},"source":"src/index.js","original":{"line":174,"column":0}},{"generated":{"line":175,"column":0},"source":"src/index.js","original":{"line":175,"column":0}},{"generated":{"line":177,"column":0},"source":"src/index.js","original":{"line":177,"column":0}},{"generated":{"line":178,"column":0},"source":"src/index.js","original":{"line":178,"column":0}},{"generated":{"line":179,"column":0},"source":"src/index.js","original":{"line":179,"column":0}},{"generated":{"line":180,"column":0},"source":"src/index.js","original":{"line":180,"column":0}},{"generated":{"line":182,"column":0},"source":"src/index.js","original":{"line":182,"column":0}},{"generated":{"line":182,"column":4},"source":"src/index.js","original":{"line":182,"column":6},"name":"nameArr"},{"generated":{"line":182,"column":11},"source":"src/index.js","original":{"line":182,"column":13}},{"generated":{"line":182,"column":14},"source":"src/index.js","original":{"line":182,"column":16}},{"generated":{"line":182,"column":15},"source":"src/index.js","original":{"line":182,"column":17}},{"generated":{"line":182,"column":19},"source":"src/index.js","original":{"line":182,"column":21}},{"generated":{"line":182,"column":21},"source":"src/index.js","original":{"line":182,"column":23}},{"generated":{"line":182,"column":25},"source":"src/index.js","original":{"line":182,"column":27}},{"generated":{"line":182,"column":27},"source":"src/index.js","original":{"line":182,"column":29}},{"generated":{"line":182,"column":34},"source":"src/index.js","original":{"line":182,"column":36}},{"generated":{"line":182,"column":35},"source":"src/index.js","original":{"line":182,"column":37}},{"generated":{"line":183,"column":0},"source":"src/index.js","original":{"line":183,"column":0}},{"generated":{"line":184,"column":0},"source":"src/index.js","original":{"line":184,"column":0}},{"generated":{"line":185,"column":0},"source":"src/index.js","original":{"line":185,"column":0}},{"generated":{"line":187,"column":0},"source":"src/index.js","original":{"line":187,"column":0}},{"generated":{"line":188,"column":0},"source":"src/index.js","original":{"line":188,"column":0}},{"generated":{"line":189,"column":0},"source":"src/index.js","original":{"line":189,"column":0}},{"generated":{"line":190,"column":0},"source":"src/index.js","original":{"line":190,"column":0}},{"generated":{"line":191,"column":0},"source":"src/index.js","original":{"line":191,"column":0}},{"generated":{"line":193,"column":0},"source":"src/index.js","original":{"line":193,"column":0}},{"generated":{"line":194,"column":0},"source":"src/index.js","original":{"line":194,"column":0}},{"generated":{"line":195,"column":0},"source":"src/index.js","original":{"line":195,"column":0}},{"generated":{"line":197,"column":0},"source":"src/index.js","original":{"line":197,"column":0}},{"generated":{"line":199,"column":0},"source":"src/index.js","original":{"line":199,"column":0}},{"generated":{"line":200,"column":0},"source":"src/index.js","original":{"line":200,"column":0}},{"generated":{"line":201,"column":0},"source":"src/index.js","original":{"line":201,"column":0}},{"generated":{"line":202,"column":0},"source":"src/index.js","original":{"line":202,"column":0}},{"generated":{"line":203,"column":0},"source":"src/index.js","original":{"line":203,"column":0}},{"generated":{"line":205,"column":0},"source":"src/index.js","original":{"line":205,"column":0}},{"generated":{"line":206,"column":0},"source":"src/index.js","original":{"line":206,"column":0}},{"generated":{"line":207,"column":0},"source":"src/index.js","original":{"line":207,"column":0}},{"generated":{"line":208,"column":0},"source":"src/index.js","original":{"line":208,"column":0}},{"generated":{"line":209,"column":0},"source":"src/index.js","original":{"line":209,"column":0}},{"generated":{"line":210,"column":0},"source":"src/index.js","original":{"line":210,"column":0}},{"generated":{"line":211,"column":0},"source":"src/index.js","original":{"line":211,"column":0}},{"generated":{"line":212,"column":0},"source":"src/index.js","original":{"line":212,"column":0}},{"generated":{"line":214,"column":0},"source":"src/index.js","original":{"line":214,"column":0}},{"generated":{"line":215,"column":0},"source":"src/index.js","original":{"line":215,"column":0}},{"generated":{"line":216,"column":0},"source":"src/index.js","original":{"line":216,"column":0}},{"generated":{"line":218,"column":0},"source":"src/index.js","original":{"line":218,"column":0}},{"generated":{"line":220,"column":0},"source":"src/index.js","original":{"line":220,"column":0}},{"generated":{"line":221,"column":0},"source":"src/index.js","original":{"line":221,"column":0}},{"generated":{"line":223,"column":0},"source":"src/index.js","original":{"line":223,"column":0}},{"generated":{"line":223,"column":4},"source":"src/index.js","original":{"line":223,"column":6},"name":"num"},{"generated":{"line":223,"column":7},"source":"src/index.js","original":{"line":223,"column":9}},{"generated":{"line":223,"column":10},"source":"src/index.js","original":{"line":223,"column":12}},{"generated":{"line":223,"column":14},"source":"src/index.js","original":{"line":223,"column":16}},{"generated":{"line":224,"column":0},"source":"src/index.js","original":{"line":224,"column":0},"name":"console"},{"generated":{"line":224,"column":7},"source":"src/index.js","original":{"line":224,"column":7}},{"generated":{"line":224,"column":8},"source":"src/index.js","original":{"line":224,"column":8},"name":"log"},{"generated":{"line":224,"column":11},"source":"src/index.js","original":{"line":224,"column":11}},{"generated":{"line":224,"column":12},"source":"src/index.js","original":{"line":224,"column":12},"name":"num"},{"generated":{"line":224,"column":15},"source":"src/index.js","original":{"line":224,"column":15}},{"generated":{"line":224,"column":16},"source":"src/index.js","original":{"line":224,"column":16},"name":"toLocaleString"},{"generated":{"line":224,"column":30},"source":"src/index.js","original":{"line":224,"column":30}},{"generated":{"line":224,"column":31},"source":"src/index.js","original":{"line":224,"column":31}},{"generated":{"line":224,"column":32},"source":"src/index.js","original":{"line":224,"column":32}},{"generated":{"line":224,"column":33},"source":"src/index.js","original":{"line":224,"column":33}}],"sources":{"src/index.js":"/**\n * const & letの変数宣言\n */\n\n// // varは割となんでもできちゃう\n// var val1 = \"var変数\";\n\n// console.log(val1);\n\n// // var変数は上書き可能\n// val1 = \"var変数を上書き\";\n// console.log(val1);\n\n// // var変数は再宣言可能\n// var val1 = \"var変数を再宣言\";\n// console.log(val1);\n\n// // let\n// let val2 = \"let変数\";\n// console.log(val2);\n\n// val2 = \"let変数を上書き\";\n\n// console.log(val2);\n\n// // letは再宣言不可能\n// let val2 = \"let変数を再宣言\";\n\n// const val3 = \"const変数\";\n// console.log(val3);\n\n// //const変数への上書き不可\n// val3 = \"const変数を上書き\";\n\n// const val3 = \"const変数を再宣言\";\n\n// constでもオブジェクトの中身は変えられる\n// constで定義したオブジェクトはプロパティの変更が可能\n// →基本的にapp開発で変数宣言はconstで行い、処理の中で上書きする変数はletを使う\n// const val4 = {\n//   name: \"じゃんけん\",\n//   age: 28\n// }\n// console.log(val4);\n\n// val4.name = \"ぽん\";\n// console.log(val4);\n\n// val4.address = \"hi\";\n// console.log(val4);\n// // constで定義した配列はプロパティの変更が可能\n\n// const val5 = ['dog', 'cat'];\n// console.log(val5);\n// val5[0] = \"bird\";\n// console.log(val5);\n// val5.push(\"monkey\");\n// console.log(val5);\n\n/**\n * テンプレート文字列\n */\n\n// const name = \"じゃんけん\";\n// const age = 28;\n// // 「私の名前はじゃんけんです。年齢は２８歳です。」\n// //これまで\n// const message1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"です。\";\n// console.log(message1);\n// //テンプレート文字列を用いた方法\n// const message2 = `私の名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\n/**\n * アロー関数\n */\n\n//従来の関数\n//  function func1(str){\n//   return str;\n//  }\n//変数に入れることもできる\n//  const func1 = function(str){\n//    return str;\n//  }\n//  console.log(func1('test'));\n\n//アロー関数\n//  const func2 = (str) => {\n//   return str;\n//  }\n//  console.log(func2(\"test2\"));\n\n//引数の()は省略できる。がprettierが勝手に保管してくれる\n\n// 波括弧とリターンを省略できる\n// const func2 = (str) => str;\n// console.log(func2(\"test2\"));\n\n// const func3 = (num1, num2) => {\n//  return num1 + num2;\n// };\n// // const func3 = (num1, num2) => num1 + num2;\n// console.log(func3(10, 20));\n\n/**\n * 分割代入\n */\n\n//  const myProfile = {\n//    name: \"じゃんけん\",\n//    age: 28\n//  };\n\n// //  const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}です`;\n// //  console.log(message1);\n\n//  const {name, age} = myProfile; //取り出し\n//  const message1 = `名前は${name}です。年齢は${age}です`;\n//  console.log(message1);\n\n// const myProfile = ['じゃんけん',28];\n\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}です。`;\n// console.log(message3);\n\n// const [name, age] = myProfile;\n// const message4 = `名前は${name}です。年齢は${age}です`;\n// console.log(message4);\n\n/**\n * デフォルト値、引数など\n */\n\n//  const sayHello = (name) => console.log(`こんにちは!${name}さん`);\n//  sayHello();\n//-> こんにちは!undefinedさん\n\n//  const sayHello = (name = \"ゲスト\") => console.log(`こんにちは!${name}さん`);\n//  sayHello();\n//->こんにちはゲストさん\n\n/**\n * スプレッド構文 ...\n * 配列に対して...ついていたら、順番に展開して処理してくれる\n */\n// const arr1 = [1,2];\n// console.log(arr1);\n// console.log(...arr1);\n\n// const sumFunc = (num1, num2) => console.log(num1 + num2);\n// // sumFunc(arr1[0], arr1[1]);\n// sumFunc(...arr1);\n\n// // まとめる\n// const arr2 = [1,2,3,4,5];\n// const [num1, num2, ...arr3] = arr2;\n// console.log(num1);\n// console.log(num2);\n// console.log(arr3);\n\n// //　配列nコピー、結合\n// const arr4 = [10,20];\n// const arr5 = [30, 40];\n// const arr6 = [...arr4];\n// console.log(arr6);\n\n// const arr7 = [...arr4, ...arr5];\n// console.log(arr7);\n\n// // =だと参照渡し\n// const arr8 = arr4;\n// console.log(arr8);\n// arr8[0] = 100;\n// console.log(arr4);\n\n/**\n * mapやfilterを使った配列の処理\n * これを使うことで、for文が不要になる\n */\n\nconst nameArr = [\"田中\", \"山田\", \"じゃんけん\"];\n//  for (let index = 0; index < nameArr.length; index++){\n//    console.log(`${index+1}番目は${nameArr[index]}です`);\n//  }\n\n// mapの中にアロー関数を定義、配列の値を１つずつ取り出しnameに入ってくる\n//  const nameArr2 = nameArr.map((name) => {\n//    return name;\n//  })\n// console.log(nameArr2);\n\n// 配列から値を１つずつ取り出して、アロー関数に渡す.\n// nameArr.map((name) => console.log(name));\n// nameArr.map((name, index) => console.log(`${index+1}番目は${name}です`));\n\n// filter 配列に対してある条件が一致した値のみ取り出す\n\n// const numArr = [1, 2, 3, 4, 5];\n// const newnumArr = numArr.filter((num) => {\n//   return num % 2 === 1;\n// });\n// console.log(newnumArr);\n\n// const newNameArr = nameArr.map((name) => {\n//   if(name === \"じゃんけん\"){\n//     return name\n//   } else {\n//     return `${name}さん`\n//   }\n// })\n// console.log(newNameArr);\n\n/**\n * 三項演算子\n */\n\n// ある条件? 条件がtrueのとき: 条件がfalseのとき\n\n// const val1 = 1 > 0 ? 'trueです' : 'falseです';\n// console.log(val1);\n\nconst num = 1300;\nconsole.log(num.toLocaleString());\n\n"},"lineCount":null}},"error":null,"hash":"ba0e63ad77d9f5061bb0c39f2662cdbe","cacheData":{"env":{}}}